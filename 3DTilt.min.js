let map = (t, e, n, a, i) => (t - e) * (i - a) / (n - e) + a; document.addEventListener("DOMContentLoaded", (() => { let t = document.createElement("style"); t.innerHTML = "\n\t.wrap {\n\t\tperspective: 1600px;\n\t\ttransform: scale(0.5);\n\t}\n\n\t.tilting {\n\t\tbox-shadow: 0px 0px 10px 0px rgba(0,0,0,0.5);\n\t\ttransition: transform 0.1s linear, box-shadow 0.1s linear;\n\t\ttransform: scale(1.5);\n\t}", document.head.append(t), document.querySelectorAll(".tilting").forEach((t => { t.addEventListener("mousemove", (e => { let n = t.getBoundingClientRect(), a = Math.min(Math.max(0, e.clientX - n.left), t.clientWidth), i = Math.min(Math.max(0, e.clientY - n.top), t.clientHeight), l = Math.min(parseInt(t.dataset.maxshear) || .001, .01), s = parseInt(t.dataset.maxshadow) || Math.min(t.clientHeight, t.clientWidth) / 30, r = map(a, 0, t.clientWidth, -l, l), m = map(i, 0, t.clientHeight, -l, l), o = map(a, 0, t.clientWidth, s, -s), d = map(i, 0, t.clientHeight, s, -s); t.style.boxShadow = `${o}px ${d}px ${2 * s}px ${s}px rgba(0,0,0,.5)`, t.style.transform = `matrix3d(1,0,0.00,${r},0.00,1,0.00,${m},0,0,1,0,0,0,0,1) scale(1.55) perspective(1600cm)` })), t.addEventListener("mouseleave", (e => { t.style.transform = "", t.style.boxShadow = "" })) })) }));